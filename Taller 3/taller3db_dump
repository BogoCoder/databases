--
-- PostgreSQL database dump
--

-- Dumped from database version 10.10 (Ubuntu 10.10-0ubuntu0.18.04.1)
-- Dumped by pg_dump version 10.10 (Ubuntu 10.10-0ubuntu0.18.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: credito; Type: DOMAIN; Schema: public; Owner: postgres
--

CREATE DOMAIN public.credito AS integer
	CONSTRAINT no_negative CHECK ((VALUE >= 0));


ALTER DOMAIN public.credito OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: curso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.curso (
    curso_cod character varying(7) NOT NULL,
    nombre character varying(50),
    nombre_unid character varying(20),
    creditos public.credito
);


ALTER TABLE public.curso OWNER TO postgres;

--
-- Name: curso2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.curso2 (
    curso_cod character varying(7) NOT NULL,
    nombre character varying(50),
    nombre_unid character varying(20),
    creditos numeric(2,0)
);


ALTER TABLE public.curso2 OWNER TO postgres;

--
-- Name: cursoall; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cursoall (
    curso_cod character varying(7) NOT NULL,
    nombre character varying(50),
    nombre_unid character varying(20),
    creditos numeric(2,0)
);


ALTER TABLE public.cursoall OWNER TO postgres;

--
-- Name: dicta; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dicta (
    inst_id character varying(5) NOT NULL,
    curso_cod character varying(8) NOT NULL,
    grupo_cod character varying(8) NOT NULL,
    semestre character varying(6) NOT NULL,
    ano numeric(4,0) NOT NULL
);


ALTER TABLE public.dicta OWNER TO postgres;

--
-- Name: examen; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.examen (
    examen_cod character varying(7) NOT NULL,
    curso_nombre character varying(20),
    fecha date NOT NULL,
    hora_inicio time without time zone DEFAULT '00:00:00'::time without time zone,
    hora_fin time without time zone DEFAULT '00:00:00'::time without time zone
);


ALTER TABLE public.examen OWNER TO postgres;

--
-- Name: duracionexamenes; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.duracionexamenes AS
 SELECT examen.curso_nombre,
    date_part('hour'::text, examen.hora_inicio) AS hora_inicio,
    (date_part('hour'::text, examen.hora_fin) - date_part('hour'::text, examen.hora_inicio)) AS duracion
   FROM public.examen;


ALTER TABLE public.duracionexamenes OWNER TO postgres;

--
-- Name: grupo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.grupo (
    curso_cod character varying(8) NOT NULL,
    grupo_cod character varying(8) NOT NULL,
    semestre character varying(6) NOT NULL,
    ano numeric(4,0) NOT NULL
);


ALTER TABLE public.grupo OWNER TO postgres;

--
-- Name: instructor; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.instructor (
    inst_id character varying(5) NOT NULL,
    nombres character varying(20) NOT NULL,
    apellidos character varying(20) NOT NULL,
    nombre_unid character varying(20),
    salario numeric(8,2)
);


ALTER TABLE public.instructor OWNER TO postgres;

--
-- Name: instructorubic; Type: MATERIALIZED VIEW; Schema: public; Owner: postgres
--

CREATE MATERIALIZED VIEW public.instructorubic AS
 SELECT instructor.nombres,
    instructor.apellidos,
    instructor.nombre_unid
   FROM public.instructor
  WITH NO DATA;


ALTER TABLE public.instructorubic OWNER TO postgres;

--
-- Name: unid_acad; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.unid_acad (
    nombre_unid character varying(20) NOT NULL,
    edificio character varying(15) NOT NULL,
    presupuesto numeric(12,2)
);


ALTER TABLE public.unid_acad OWNER TO postgres;

--
-- Name: resum; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.resum AS
 SELECT avg(unid_acad.presupuesto) AS avg,
    min(unid_acad.presupuesto) AS min,
    max(unid_acad.presupuesto) AS max,
    stddev(unid_acad.presupuesto) AS stddev
   FROM public.unid_acad;


ALTER TABLE public.resum OWNER TO postgres;

--
-- Name: resumengruposunidad; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.resumengruposunidad AS
 SELECT unid_acad.nombre_unid,
    a.nombre,
    a.grupo_cod,
    a.ano,
    a.semestre
   FROM (public.unid_acad
     LEFT JOIN (public.curso
     JOIN public.grupo USING (curso_cod)) a ON (((unid_acad.nombre_unid)::text = (a.nombre_unid)::text)));


ALTER TABLE public.resumengruposunidad OWNER TO postgres;

--
-- Data for Name: curso; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.curso (curso_cod, nombre, nombre_unid, creditos) FROM stdin;
000	programacion	MACC	4
001	arquitectura	MACC	4
002	algoritmos	MACC	4
003	laboratorio	BIOL	5
\.


--
-- Data for Name: curso2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.curso2 (curso_cod, nombre, nombre_unid, creditos) FROM stdin;
000	programacion	MACC	4
001	arquitectura	MACC	4
201	ingles 1	ROSEA	2
202	ingles 2	ROSEA	2
203	ingles 3	ROSEA	2
\.


--
-- Data for Name: cursoall; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cursoall (curso_cod, nombre, nombre_unid, creditos) FROM stdin;
000	programacion	MACC	4
001	arquitectura	MACC	4
002	algoritmos	MACC	4
003	laboratorio	BIOL	5
203	ingles 3	ROSEA	2
201	ingles 1	ROSEA	2
202	ingles 2	ROSEA	2
\.


--
-- Data for Name: dicta; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.dicta (inst_id, curso_cod, grupo_cod, semestre, ano) FROM stdin;
1	000	1	1	2018
2	001	1	2	2018
3	002	1	1	2018
4	002	2	1	2018
\.


--
-- Data for Name: examen; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.examen (examen_cod, curso_nombre, fecha, hora_inicio, hora_fin) FROM stdin;
000	programacion	2019-09-02	13:00:00	15:00:00
001	arquitectura	2019-09-07	09:00:00	11:00:00
002	laboratorio	2019-10-02	09:00:00	11:00:00
\.


--
-- Data for Name: grupo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.grupo (curso_cod, grupo_cod, semestre, ano) FROM stdin;
000	1	1	2018
001	1	2	2018
002	1	1	2018
002	2	1	2018
003	1	1	2018
003	2	1	2018
\.


--
-- Data for Name: instructor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.instructor (inst_id, nombres, apellidos, nombre_unid, salario) FROM stdin;
1	Juan	Perez	MACC	100.00
2	Ana	Gutierrez	MACC	200.00
3	Ernerto	Huertas	ECON	500.00
4	Reinaldo	Rondon	MACC	300.00
5	Camilo	Ramirez	ECON	200.00
6	Edgar	Andrade	MACC	200.00
\.


--
-- Data for Name: unid_acad; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.unid_acad (nombre_unid, edificio, presupuesto) FROM stdin;
ECON	Pedro	285.40
BIOL	QM	285.40
ROSEA	Claustro	285.40
MACC	Cabal	285.40
JURIS	Admin	285.40
ARTESLIBERALES	SF	50.00
FILO	SF	50.00
\.


--
-- Name: curso2 curso2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curso2
    ADD CONSTRAINT curso2_pkey PRIMARY KEY (curso_cod);


--
-- Name: curso curso_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT curso_pkey PRIMARY KEY (curso_cod);


--
-- Name: cursoall cursoall_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cursoall
    ADD CONSTRAINT cursoall_pkey PRIMARY KEY (curso_cod);


--
-- Name: dicta dicta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dicta
    ADD CONSTRAINT dicta_pkey PRIMARY KEY (inst_id, curso_cod, grupo_cod, semestre, ano);


--
-- Name: examen examen_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.examen
    ADD CONSTRAINT examen_pkey PRIMARY KEY (examen_cod);


--
-- Name: grupo grupo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.grupo
    ADD CONSTRAINT grupo_pkey PRIMARY KEY (curso_cod, grupo_cod, semestre, ano);


--
-- Name: instructor instructor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.instructor
    ADD CONSTRAINT instructor_pkey PRIMARY KEY (inst_id);


--
-- Name: curso nombre_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT nombre_unique UNIQUE (nombre);


--
-- Name: unid_acad unid_acad_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unid_acad
    ADD CONSTRAINT unid_acad_pkey PRIMARY KEY (nombre_unid);


--
-- Name: curso2 curso2_nombre_unid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curso2
    ADD CONSTRAINT curso2_nombre_unid_fkey FOREIGN KEY (nombre_unid) REFERENCES public.unid_acad(nombre_unid);


--
-- Name: curso curso_nombre_unid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curso
    ADD CONSTRAINT curso_nombre_unid_fkey FOREIGN KEY (nombre_unid) REFERENCES public.unid_acad(nombre_unid);


--
-- Name: cursoall cursoall_nombre_unid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cursoall
    ADD CONSTRAINT cursoall_nombre_unid_fkey FOREIGN KEY (nombre_unid) REFERENCES public.unid_acad(nombre_unid);


--
-- Name: dicta dicta_curso_cod_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dicta
    ADD CONSTRAINT dicta_curso_cod_fkey FOREIGN KEY (curso_cod, grupo_cod, semestre, ano) REFERENCES public.grupo(curso_cod, grupo_cod, semestre, ano);


--
-- Name: dicta dicta_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dicta
    ADD CONSTRAINT dicta_inst_id_fkey FOREIGN KEY (inst_id) REFERENCES public.instructor(inst_id);


--
-- Name: examen examen_curso_nombre_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.examen
    ADD CONSTRAINT examen_curso_nombre_fkey FOREIGN KEY (curso_nombre) REFERENCES public.curso(nombre) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: grupo grupo_curso_cod_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.grupo
    ADD CONSTRAINT grupo_curso_cod_fkey FOREIGN KEY (curso_cod) REFERENCES public.curso(curso_cod);


--
-- Name: instructor instructor_nombre_unid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.instructor
    ADD CONSTRAINT instructor_nombre_unid_fkey FOREIGN KEY (nombre_unid) REFERENCES public.unid_acad(nombre_unid);


--
-- Name: TABLE unid_acad; Type: ACL; Schema: public; Owner: postgres
--

GRANT DELETE ON TABLE public.unid_acad TO ramon;
GRANT DELETE ON TABLE public.unid_acad TO planeacion;


--
-- Name: COLUMN unid_acad.nombre_unid; Type: ACL; Schema: public; Owner: postgres
--

GRANT INSERT(nombre_unid) ON TABLE public.unid_acad TO ramon;


--
-- Name: COLUMN unid_acad.edificio; Type: ACL; Schema: public; Owner: postgres
--

GRANT INSERT(edificio) ON TABLE public.unid_acad TO ramon;


--
-- Name: COLUMN unid_acad.presupuesto; Type: ACL; Schema: public; Owner: postgres
--

GRANT INSERT(presupuesto) ON TABLE public.unid_acad TO ramon;


--
-- Name: instructorubic; Type: MATERIALIZED VIEW DATA; Schema: public; Owner: postgres
--

REFRESH MATERIALIZED VIEW public.instructorubic;


--
-- PostgreSQL database dump complete
--

